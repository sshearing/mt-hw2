#!/usr/bin/env python
import optparse
import math
import sys
from collections import defaultdict
from Aligner import Aligner
from Model1 import Model1
from Dice import Dice

optparser = optparse.OptionParser()
optparser.add_option("-d", "--data", dest="train", default="data/hansards", help="Data filename prefix (default=data)")
optparser.add_option("-e", "--english", dest="english", default="e", help="Suffix of English filename (default=e)")
optparser.add_option("-f", "--french", dest="french", default="f", help="Suffix of French filename (default=f)")
optparser.add_option("-t", "--threshold", dest="threshold", default=0.5, type="float", help="Threshold for aligning with Dice's coefficient (default=0.5)")
optparser.add_option("-n", "--num_sentences", dest="num_sents", default=sys.maxint, type="int", help="Number of sentences to use for training and alignment")
optparser.add_option("-a", "--algorithm", dest="alg", default="model1", choices=["model1", "dice"], help="Choice of algorithm to use for alignment")
optparser.add_option("-i", "--iterations", dest="iters", default=5, type="int", help="Number of iterations to use for appropriate algorithms.")
(opts, _) = optparser.parse_args()
f_data = "%s.%s" % (opts.train, opts.french)
e_data = "%s.%s" % (opts.train, opts.english)

aligner = None
if opts.alg == "model1":
  aligner = Model1(opts.iters)
  sys.stderr.write("Training with IBM Model 1...\n")
elif opts.alg == "dice":
  aligner = Dice(opts.threshold)
  sys.stderr.write("Training with Dice's coefficient...\n")
  
bitext = [[sentence.strip().split() for sentence in pair] for pair in zip(open(f_data), open(e_data))[:opts.num_sents]]
aligner.train(bitext)

for pair in bitext:
  alignment = aligner.align(pair)
  try:
    for (i, j) in alignment:
      sys.stdout.write("%i-%i " % (i,j))
    sys.stdout.write("\n")
  except IOError: # only an issue with piping to head
    pass

